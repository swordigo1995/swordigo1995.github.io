<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>swordigo</title>
  <subtitle>嗨呀 我还能说什么= =</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-18T13:05:01.304Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ren Haocheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PAT 1002. A+B for Polynomials</title>
    <link href="http://yoursite.com/2016/11/18/2016-11-18-pat-1002-ab-for-polynomials/"/>
    <id>http://yoursite.com/2016/11/18/2016-11-18-pat-1002-ab-for-polynomials/</id>
    <published>2016-11-18T13:05:01.224Z</published>
    <updated>2016-11-18T13:05:01.304Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.patest.cn/contests/pat-a-practise/1002" target="_blank" rel="external">https://www.patest.cn/contests/pat-a-practise/1002</a></p>
<h2 id="solution-1"><a href="#solution-1" class="headerlink" title="solution 1."></a>solution 1.</h2><p>link list</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> _PolynomialNode</div><div class="line">&#123;</div><div class="line">  <span class="keyword">int</span> exponent;</div><div class="line">  <span class="keyword">double</span> coefficient;</div><div class="line">  <span class="keyword">struct</span> _PolynomialNode* next;</div><div class="line">&#125; PolynomialNode;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> PolynomialNode* Polynomial;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">printPolynomial</span><span class="params">(Polynomial p)</span></span></div><div class="line">&#123;</div><div class="line">  Polynomial temp = p-&gt;next;</div><div class="line">  <span class="keyword">int</span> len = <span class="number">0</span>;</div><div class="line">  <span class="keyword">for</span> (; temp; temp = temp-&gt;next) len++;</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, len);</div><div class="line">  temp = p-&gt;next;</div><div class="line">  <span class="keyword">while</span> (temp)</div><div class="line">  &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">" %d %.1f"</span>, temp-&gt;exponent, temp-&gt;coefficient);</div><div class="line">    temp = temp-&gt;next;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">readPolynomial</span><span class="params">(Polynomial rear)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">int</span> k;</div><div class="line">  <span class="keyword">int</span> e;</div><div class="line">  <span class="keyword">double</span> c;</div><div class="line">  <span class="built_in">cin</span> &gt;&gt; k;</div><div class="line">  <span class="keyword">while</span> (k--)</div><div class="line">  &#123;</div><div class="line">    <span class="built_in">cin</span> &gt;&gt; e &gt;&gt; c;</div><div class="line">    PolynomialNode* node = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolynomialNode));</div><div class="line">    node-&gt;exponent = e;</div><div class="line">    node-&gt;coefficient = c;</div><div class="line">    node-&gt;next = <span class="literal">NULL</span>;</div><div class="line">    rear-&gt;next = node; <span class="comment">//add a new node in the rear</span></div><div class="line">    rear = rear-&gt;next;<span class="comment">// rear go on </span></div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">attach</span><span class="params">(<span class="keyword">int</span> e, <span class="keyword">double</span> c, Polynomial* pRear)</span><span class="comment">//使用pRear才能返回rear指针</span></span></div><div class="line">&#123;</div><div class="line">  PolynomialNode* node = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolynomialNode));</div><div class="line">  node-&gt;coefficient = c;</div><div class="line">  node-&gt;exponent = e;</div><div class="line">  node-&gt;next = <span class="literal">NULL</span>;</div><div class="line">  (*pRear)-&gt;next = node;</div><div class="line">  *pRear = node;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> e1, <span class="keyword">int</span> e2)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span> (e1 &gt; e2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (e1 &lt; e2) <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">  <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  Polynomial p1, p2;</div><div class="line">  Polynomial front, rear, temp;<span class="comment">// result</span></div><div class="line">  p1 = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolynomialNode));<span class="comment">//空 头结点</span></div><div class="line">  p2 = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolynomialNode));</div><div class="line">  rear = (Polynomial)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(PolynomialNode));</div><div class="line">  front = rear;</div><div class="line">  readPolynomial(p1);</div><div class="line">  readPolynomial(p2);</div><div class="line">  p1 = p1-&gt;next;</div><div class="line">  p2 = p2-&gt;next;</div><div class="line">  <span class="keyword">double</span> sum;</div><div class="line">  <span class="keyword">while</span> (p1&amp;&amp;p2) <span class="comment">// one is not zero</span></div><div class="line">  &#123;</div><div class="line">    <span class="keyword">switch</span> (compare(p1-&gt;exponent,p2-&gt;exponent))</div><div class="line">    &#123;</div><div class="line">    <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">      attach(p1-&gt;exponent, p1-&gt;coefficient, &amp;rear);</div><div class="line">      p1 = p1-&gt;next;</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> <span class="number">-1</span>:</div><div class="line">      attach(p2-&gt;exponent, p2-&gt;coefficient, &amp;rear);</div><div class="line">      p2 = p2-&gt;next;</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">      sum = p1-&gt;coefficient + p2-&gt;coefficient;</div><div class="line">      <span class="keyword">if</span>(sum) attach(p1-&gt;exponent, sum, &amp;rear);</div><div class="line">      p1 = p1-&gt;next;</div><div class="line">      p2 = p2-&gt;next;</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">default</span>:</div><div class="line">      <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;<span class="comment">// then copy the last nodes into another one</span></div><div class="line">  <span class="keyword">for</span> (; p1; p1 = p1-&gt;next) attach(p1-&gt;exponent, p1-&gt;coefficient, &amp;rear);</div><div class="line">  <span class="keyword">for</span> (; p2; p2 = p2-&gt;next) attach(p2-&gt;exponent, p2-&gt;coefficient, &amp;rear);</div><div class="line">  <span class="comment">//rear-&gt;next = NULL;</span></div><div class="line">  <span class="comment">//temp = front;</span></div><div class="line">  <span class="comment">//front = front-&gt;next;</span></div><div class="line">  <span class="comment">//free(temp);</span></div><div class="line">  printPolynomial(front);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>flexible but difficult to realize</p>
<h2 id="solution-2"><a href="#solution-2" class="headerlink" title="solution 2"></a>solution 2</h2><p>array</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">double</span> sum[<span class="number">1002</span>] = &#123;&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">double</span> c;</div><div class="line">  <span class="keyword">int</span> k, e;</div><div class="line">  <span class="keyword">int</span> counter = <span class="number">0</span>;</div><div class="line">  <span class="keyword">int</span> max_index;</div><div class="line">  <span class="comment">//memset(sum, 0, sizeof(int));</span></div><div class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</div><div class="line">  max_index = <span class="number">0</span>;</div><div class="line">  <span class="keyword">while</span> (k--)</div><div class="line">  &#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>, &amp;e, &amp;c);</div><div class="line">    sum[e] += c;</div><div class="line">    <span class="keyword">if</span> (e &gt; max_index) max_index = e;</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</div><div class="line">  <span class="keyword">while</span> (k--)</div><div class="line">  &#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %lf"</span>, &amp;e, &amp;c);</div><div class="line">    sum[e] += c;</div><div class="line">    <span class="keyword">if</span> (e &gt; max_index) max_index = e;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = max_index; i &gt;= <span class="number">0</span>; i--)</div><div class="line">    <span class="keyword">if</span> (sum[i]) counter++;</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>, counter);</div><div class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = max_index; i &gt;= <span class="number">0</span>; i--)</div><div class="line">    <span class="keyword">if</span> (sum[i])</div><div class="line">      <span class="built_in">printf</span>(<span class="string">" %d %.1lf"</span>, i, sum[i]);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>easy to realize.<br>more suitable for quick test.</p>
<h2 id="Usage-of-“-memset-“"><a href="#Usage-of-“-memset-“" class="headerlink" title="Usage of “ memset “"></a>Usage of “ memset “</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> buffer[] = <span class="string">"Helloworld\n"</span>;</div><div class="line"><span class="built_in">printf</span>(<span class="string">"Buffer before memset:%s\n"</span>, buffer);</div><div class="line"><span class="built_in">memset</span>(buffer, <span class="string">'*'</span>, <span class="built_in">strlen</span>(buffer));</div><div class="line"><span class="built_in">printf</span>(<span class="string">"Buffer after memset:%s\n"</span>, buffer);</div></pre></td></tr></table></figure>
<blockquote>
<blockquote>
<ol>
<li>memset函数对数组而言只能用于置零（0）或置负一（-1）操作.</li>
<li>memset(void <em>s, int ch,size_tn);中key实际范围应该在0~~255，因为该函数只能取ch的后八位赋值给你所输入的范围的每个字节，比如int a[5]赋值memset（a,-1,sizeof(int )</em>5）与memset（a,511,sizeof(int )*5） 所赋值的结果是一样的都为-1.  </li>
<li>不用过度使用memset</li>
<li>memset可以方便的清空一个结构类型的变量或数组。sizeof(struct_sample)*n</li>
</ol>
</blockquote>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.patest.cn/contests/pat-a-practise/1002&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.patest.cn/contests/pat-a-practise
    
    </summary>
    
      <category term="PAT(Advanced Level)" scheme="http://yoursite.com/categories/PAT-Advanced-Level/"/>
    
    
      <category term="online judge" scheme="http://yoursite.com/tags/online-judge/"/>
    
      <category term="C/C++" scheme="http://yoursite.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>listening comprehension</title>
    <link href="http://yoursite.com/2016/11/16/2016-11-16-listening-comprehension/"/>
    <id>http://yoursite.com/2016/11/16/2016-11-16-listening-comprehension/</id>
    <published>2016-11-16T15:34:43.740Z</published>
    <updated>2016-11-16T15:34:44.174Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li></li>
</ol>
<ul>
<li>What a wonderful performance your rock band has never sounded better!</li>
<li>Many thanks! I guess <em>aloughts</em> our <strong>(all those hours of )</strong> practice in the past month finally paid <strong>(paying)</strong> off.</li>
</ul>
<p>Q: what does the man mean?</p>
<p>2.</p>
<ul>
<li>I can’t decide what to do for my summer vacation. I either want to go on a bike tour of European or go <em>diving</em> (潜水) in Mexico.</li>
<li>Well. we are offering <strong>an all-inclusive</strong>(全套服务) two week trip to Mexico for only 300 dollars.</li>
</ul>
<p>Q: what does the women suggest the man do for his vacation?</p>
<p>3.</p>
<ul>
<li>How long do you think this project might take?</li>
<li>I had said(‘d say) about three mouth but it could take longer if something unexpected happened. May be <em>*(we’d better allow an extra month) at </em> * on best month, we won’t have to worry about being late.</li>
</ul>
<p>Q: Why does the man said <strong>extra time should be allowed</strong> <em>exper</em> mouth are needed for the project?</p>
<p>4.</p>
<ul>
<li>I’m thinking about becoming a member here. I’d <em>like</em> some information.</li>
<li>Sure. a three mouth membership <strong>costs</strong> cause 150 dollars. And that include <em>…</em> <strong>use of the wait room</strong>  for <em>..room?</em> sauna and pool. I will give you a free pass so that you can try that the <em>ficility</em> <strong>facilities before</strong> you decide.</li>
</ul>
<p>Q: What do we learn from the conversation?</p>
<ol>
<li></li>
</ol>
<ul>
<li>I’m sorry to <strong>hear*</strong>feild?<em> that you failed the physics test<em>*course,Ted</em></em> ?</li>
<li><strong>Let’s face it</strong>.That’s <em>…</em>. I am just not <em>cut out</em> to be a scientist.</li>
</ul>
<p>Q: what does the man mean?</p>
<p>6.</p>
<ul>
<li><strong>Gary insisted on *</strong>garign …* or buying the food for the picnic?</li>
<li>That’s pretty generous<strong>generous of</strong> him? but shouldn’t we <strong>at least offer </strong> <em>gear a offer</em> to <strong>share</strong> shooten the expenses? He has a big family to support.</li>
</ul>
<p>Q: what does the women suggest they do?</p>
<p>7.</p>
<ul>
<li>Did you see the headlines in the paper this morning?</li>
<li>yeah. <strong>Apparently</strong>(表面上看起来,显然) <em>..</em> the bus company <strong>will be laying off</strong> has made <em>ban off</em> their employee since they can’t go on in agreement <strong>on wages</strong>(工资,不太固定的工资) <em>edges</em> by midnight.</li>
</ul>
<p>Q: what did the man read about?</p>
<p>8.</p>
<ul>
<li>have we <strong>receirved</strong>see a payment <strong>for the overseas order we delivered</strong> since we … over last month?</li>
<li>yes. the <em>cheak</em> came in yesterday afternoon. I would be dispositing it when it goes to bank today.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;What a wonderful performance your rock band has never sounded better!&lt;/li&gt;
&lt;li&gt;Many thanks! I guess &lt;em&gt;alough
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Probability and Hashing PART 1</title>
    <link href="http://yoursite.com/2016/11/16/2016-11-16-probability-and-hashing-part-1/"/>
    <id>http://yoursite.com/2016/11/16/2016-11-16-probability-and-hashing-part-1/</id>
    <published>2016-11-16T07:56:01.907Z</published>
    <updated>2016-11-16T07:56:01.977Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Rolling-a-die-骰子"><a href="#Rolling-a-die-骰子" class="headerlink" title="Rolling a die(骰子)"></a>Rolling a die(骰子)</h2><p>We looked at things quite informally (非正式地) before.<br> lay down some of the foundations we need to understand stochastic situations more rigorously(严密地,严厉地).</p>
<p>parabolic path(抛物线轨迹)</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Rolling-a-die-骰子&quot;&gt;&lt;a href=&quot;#Rolling-a-die-骰子&quot; class=&quot;headerlink&quot; title=&quot;Rolling a die(骰子)&quot;&gt;&lt;/a&gt;Rolling a die(骰子)&lt;/h2&gt;&lt;p&gt;We looked at
    
    </summary>
    
      <category term="MIT 6.00 STUDY NOTES" scheme="http://yoursite.com/categories/MIT-6-00-STUDY-NOTES/"/>
    
    
      <category term="study note" scheme="http://yoursite.com/tags/study-note/"/>
    
      <category term="MOOC" scheme="http://yoursite.com/tags/MOOC/"/>
    
  </entry>
  
  <entry>
    <title>PAT 1001. A+B Format</title>
    <link href="http://yoursite.com/2016/11/16/2016-11-16-pat-1001-ab-format/"/>
    <id>http://yoursite.com/2016/11/16/2016-11-16-pat-1001-ab-format/</id>
    <published>2016-11-16T03:25:28.442Z</published>
    <updated>2016-11-16T03:29:51.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1001-A-B-Format"><a href="#1001-A-B-Format" class="headerlink" title="1001. A+B Format"></a>1001. A+B Format</h2><p><a href="https://www.patest.cn/contests/pat-a-practise/1001" target="_blank" rel="external">https://www.patest.cn/contests/pat-a-practise/1001</a></p>
<h3 id="my-codes"><a href="#my-codes" class="headerlink" title="my codes"></a>my codes</h3><p>-1000000 &lt;= a, b &lt;= 1000000.<br>in 32bit machine, unsigned   int   0～4294967295   , int   -2147483648～2147483647 .<br>So, it’s not necessary to use high precision algorithm or long long/ _int64.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span> <span class="comment">//使用流操纵算子</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  freopen(<span class="string">"in.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</div><div class="line">  freopen(<span class="string">"out.txt"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</div><div class="line">  <span class="keyword">int</span> a, b, c;</div><div class="line">  <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</div><div class="line">  c = a + b;</div><div class="line">  <span class="built_in">cout</span>.fill(<span class="string">'0'</span>);</div><div class="line">  <span class="keyword">if</span> (c / <span class="number">1000000</span> != <span class="number">0</span>)</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; c / <span class="number">1000000</span> &lt;&lt; <span class="string">','</span> &lt;&lt; setw(<span class="number">3</span>) &lt;&lt; <span class="built_in">abs</span>((c % <span class="number">1000000</span>) / <span class="number">1000</span>) &lt;&lt; <span class="string">','</span> &lt;&lt; setw(<span class="number">3</span>) &lt;&lt; <span class="built_in">abs</span>(c % <span class="number">1000</span>);</div><div class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (c / <span class="number">1000</span> != <span class="number">0</span>)</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; c / <span class="number">1000</span> &lt;&lt; <span class="string">','</span> &lt;&lt; setw(<span class="number">3</span>) &lt;&lt; <span class="built_in">abs</span>(c % <span class="number">1000</span>);</div><div class="line">  <span class="keyword">else</span></div><div class="line">    <span class="built_in">cout</span> &lt;&lt; c;</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>warning:</p>
<ul>
<li>Don’t forget to fill “zero” after modulo operation.</li>
<li>properties of positive and negative.</li>
<li>This method only works under given precision.</li>
</ul>
<h3 id="other-solutions"><a href="#other-solutions" class="headerlink" title="other solutions"></a>other solutions</h3><p><strong>1. with universality</strong></p>
<p>计算a+b的结果c，<em>处理掉负号</em>；<br>按c按1000进制将结果<em>存储在数组中</em>；<br>输出最高位；<br>剩下的每位：输出一个 “,” 号，再输出该位（补零）  </p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="keyword">int</span>  a,b,l,ans[<span class="number">10</span>];</div><div class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">( )</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b); a+b&lt;<span class="number">0</span>; <span class="built_in">printf</span>(<span class="string">"-"</span>)) a=-a,b=-b;</div><div class="line">    <span class="keyword">for</span> (a+=b,l=a==<span class="number">0</span>; a; a/=<span class="number">1000</span>) ans[++l]=a%<span class="number">1000</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[l]); --l; ) <span class="built_in">printf</span>(<span class="string">",%03d"</span>,ans[l]);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>a cool code with less readability.</p>
<p><strong>2. recursion</strong></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> c)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span>(c/<span class="number">1000</span>)</div><div class="line">  &#123;</div><div class="line">    fun(c/<span class="number">1000</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">",%03d"</span>,c%<span class="number">1000</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,c);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">int</span> a,b;</div><div class="line">  <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</div><div class="line">  <span class="keyword">int</span> sum = a + b;</div><div class="line">  <span class="keyword">if</span>(sum &lt; <span class="number">0</span>)</div><div class="line">  &#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>;</div><div class="line">    sum = -sum;</div><div class="line">  &#125;</div><div class="line">  fun(sum);</div><div class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>simple and a clear logic structure</p>
<blockquote>
<p>%3d–可以指定宽度，不足的左边补空格<br>%-3d–左对齐,右边补空格<br>%03d—一种左边补0的等宽格式,比如数字12,%03d出来就是: 012</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1001-A-B-Format&quot;&gt;&lt;a href=&quot;#1001-A-B-Format&quot; class=&quot;headerlink&quot; title=&quot;1001. A+B Format&quot;&gt;&lt;/a&gt;1001. A+B Format&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https:/
    
    </summary>
    
      <category term="PAT(Advanced Level)" scheme="http://yoursite.com/categories/PAT-Advanced-Level/"/>
    
    
      <category term="online judge" scheme="http://yoursite.com/tags/online-judge/"/>
    
      <category term="C/C++" scheme="http://yoursite.com/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>Random Walks and Simulation Models PART 3</title>
    <link href="http://yoursite.com/2016/11/15/no-4-random-walks-and-simulation-models-part-3/"/>
    <id>http://yoursite.com/2016/11/15/no-4-random-walks-and-simulation-models-part-3/</id>
    <published>2016-11-15T10:46:33.187Z</published>
    <updated>2016-11-15T10:51:38.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Running-Python-Codes"><a href="#Running-Python-Codes" class="headerlink" title="Running Python Codes"></a>Running Python Codes</h2><p><strong>an importable module</strong> is not a <strong>script</strong> in python.</p>
<p>The code provided in the courses website is a module. We can say the code without main function. So, it is necessary to import the model and run the function in ti.</p>
<p>We can also executing modules as scripts.<br>using<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    <span class="keyword">import</span> sys</div><div class="line">    fib(int(sys.argv[<span class="number">1</span>]))</div></pre></td></tr></table></figure></p>
<p>We can run a Python module like this:</p>
<ul>
<li>python fibo.py <arguments> </arguments></li>
</ul>
<blockquote>
<p>There is a trick to run .py file under Python shell</p>
<p>import os 载入os模块<br>os.chdir(“X:\XXX\YYY…”) 添加你的文件夹路径 注意用路径两侧有引号<br>execfile(“XXX.py”) 在这个路径中打开你的py文件  </p>
<p>from fibo import *  we can use function name to access directly.</p>
</blockquote>
<p><a href="https://docs.python.org/2.7/tutorial/modules.html" target="_blank" rel="external">python documentation 6.Modules</a></p>
<p><img src="http://ogirdcrob.bkt.clouddn.com/chdir.jpg" alt="methods to change directory"></p>
<p><img src="http://ogirdcrob.bkt.clouddn.com/result.jpg" alt="using the main method"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Running-Python-Codes&quot;&gt;&lt;a href=&quot;#Running-Python-Codes&quot; class=&quot;headerlink&quot; title=&quot;Running Python Codes&quot;&gt;&lt;/a&gt;Running Python Codes&lt;/h2&gt;&lt;
    
    </summary>
    
      <category term="MIT 6.00 STUDY NOTES" scheme="http://yoursite.com/categories/MIT-6-00-STUDY-NOTES/"/>
    
    
      <category term="study note" scheme="http://yoursite.com/tags/study-note/"/>
    
      <category term="MOOC" scheme="http://yoursite.com/tags/MOOC/"/>
    
  </entry>
  
  <entry>
    <title>Random Walks and Simulation Models PART 2</title>
    <link href="http://yoursite.com/2016/11/15/no-3-random-walks-and-simulation-models-part-2/"/>
    <id>http://yoursite.com/2016/11/15/no-3-random-walks-and-simulation-models-part-2/</id>
    <published>2016-11-14T16:57:54.757Z</published>
    <updated>2016-11-14T17:05:12.783Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Brownian-Motion"><a href="#Brownian-Motion" class="headerlink" title="Brownian Motion"></a>Brownian Motion</h2><p>In 1827, the Scottish botanist(植物学家) Robert Brown observed that pollen (花粉)particles suspended in water seemed to float around at random.<br><em>made no attempts to model it mathematically.</em></p>
<p>Brownian motion is example of something that has come to be called a random walk.</p>
<h2 id="Drunken-Walker"><a href="#Drunken-Walker" class="headerlink" title="Drunken Walker"></a>Drunken Walker</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>A question comes. A drunken(酒醉的) farmer standing in the middle of the field.<br>And every second he takes one step in a random direction.<br>Now I want you to ponder(思索) the question, what is the expected distance from the<br>origin in, say 1,000 seconds.</p>
<h3 id="Classes"><a href="#Classes" class="headerlink" title="Classes"></a>Classes</h3><ul>
<li>Location</li>
</ul>
<ol>
<li>two dimensions.</li>
<li>No built-in assumption about direction.</li>
</ol>
<ul>
<li>Field</li>
</ul>
<ol>
<li>many drunks</li>
<li>drunks can be at same location.</li>
<li>field unbounded</li>
</ol>
<ul>
<li>Drunk  </li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Drunk</span><span class="params">(object)</span>:</span></div><div class="line"> <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></div><div class="line"> self.name = name</div><div class="line"> <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line"> <span class="keyword">return</span> <span class="string">'This drunk is named '</span> + self.name</div><div class="line"></div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">UsualDrunk</span><span class="params">(Drunk)</span>:</span></div><div class="line"> <span class="function"><span class="keyword">def</span> <span class="title">takeStep</span><span class="params">(self)</span>:</span></div><div class="line"> stepChoices =\</div><div class="line"> [(<span class="number">0.0</span>,<span class="number">1.0</span>),(<span class="number">0.0</span>,<span class="number">-1.0</span>),(<span class="number">1.0</span>, <span class="number">0.0</span>),(<span class="number">-1.0</span>, <span class="number">0.0</span>)]</div><div class="line"> <span class="keyword">return</span> random.choice(stepChoices)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Brownian-Motion&quot;&gt;&lt;a href=&quot;#Brownian-Motion&quot; class=&quot;headerlink&quot; title=&quot;Brownian Motion&quot;&gt;&lt;/a&gt;Brownian Motion&lt;/h2&gt;&lt;p&gt;In 1827, the Scott
    
    </summary>
    
      <category term="MIT 6.00 STUDY NOTES" scheme="http://yoursite.com/categories/MIT-6-00-STUDY-NOTES/"/>
    
    
      <category term="study note" scheme="http://yoursite.com/tags/study-note/"/>
    
      <category term="MOOC" scheme="http://yoursite.com/tags/MOOC/"/>
    
  </entry>
  
  <entry>
    <title>Random Walks and Simulation Models PART 1</title>
    <link href="http://yoursite.com/2016/11/14/no-2-random-walks-and-simulation-models/"/>
    <id>http://yoursite.com/2016/11/14/no-2-random-walks-and-simulation-models/</id>
    <published>2016-11-14T04:10:50.990Z</published>
    <updated>2016-11-14T16:15:21.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Simulation-Models"><a href="#Simulation-Models" class="headerlink" title="Simulation Models"></a>Simulation Models</h2><p>an <em>experimental device</em> called model.  </p>
<p>simulation models are <strong>descriptive(描述性的), not prescriptive（规定性的）.</strong></p>
<h3 id="Kinds-of-simulation-model"><a href="#Kinds-of-simulation-model" class="headerlink" title="Kinds of simulation model"></a>Kinds of simulation model</h3><p>Deterministic(确定性模型) vs Stochastic(随机性模型)<br>Static vs Dynamic<br>Discrete vs Continuous</p>
<ol>
<li><strong>Deterministic</strong> simulations are completely defined by the model<br><em>Rerunning the simulation will not change the result</em>  <blockquote>
<p>how a system works under given conditions, but not how to arrange the conditions to make the system work best.<br>Deterministic simulations are typically used when the system being modeled is too complex to analyze analytically(用解析方法).</p>
</blockquote>
</li>
</ol>
<p><strong>Stochastic</strong> simulations include randomness<br><em>Different runs can generate different results</em></p>
<ol>
<li>In a <strong>discrete</strong> model, values of variables are enumerable (e.g.,<br>integers).<br>In a <strong>continuous</strong> model, they are not enumerable<br>(e.g., real numbers). </li>
</ol>
<p>Most prominently(最显著的是)<br><strong>systems that were not mathematically tractable(听话,驯服的)</strong> (social science e.g., economics) conventional mathematics（传统数学）doesn’t works.<br><strong>USE successive refinements</strong> – how to change the model to make the results more accurate.  </p>
<blockquote>
<p>pervasiveness(无处不在) of simulations<br>inevitably(不可避免地) somebody says, physics.</p>
</blockquote>
<p>To recapitulate(回顾 一下要点), simulation attempts to build an <strong>experimental device</strong> called model.<br>The goal of the model is to provide useful information about the possible behaviors of the system being modeled.<br><strong>Approximate of reality</strong></p>
<blockquote>
<p> All models are wrong, but some are useful.  </p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Simulation-Models&quot;&gt;&lt;a href=&quot;#Simulation-Models&quot; class=&quot;headerlink&quot; title=&quot;Simulation Models&quot;&gt;&lt;/a&gt;Simulation Models&lt;/h2&gt;&lt;p&gt;an &lt;em&gt;exp
    
    </summary>
    
      <category term="MIT 6.00 STUDY NOTES" scheme="http://yoursite.com/categories/MIT-6-00-STUDY-NOTES/"/>
    
    
      <category term="study note" scheme="http://yoursite.com/tags/study-note/"/>
    
      <category term="MOOC" scheme="http://yoursite.com/tags/MOOC/"/>
    
  </entry>
  
  <entry>
    <title>NO.1 Introduction to Computation</title>
    <link href="http://yoursite.com/2016/11/12/no-1-introduction-to-computation/"/>
    <id>http://yoursite.com/2016/11/12/no-1-introduction-to-computation/</id>
    <published>2016-11-12T04:21:32.419Z</published>
    <updated>2016-11-13T02:51:17.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Fundamentation-of-computer"><a href="#Fundamentation-of-computer" class="headerlink" title="Fundamentation of computer"></a>Fundamentation of computer</h2><ul>
<li>Performs calculations (speed)</li>
<li><p>Remember the results (storage)</p>
<p>Though the speed is fast and the storage is large, there are some limitations.  </p>
</li>
<li>too complex</li>
<li>impossible to compute( a classic problem is how to predict whether a piece of code will always halt with and answer for any input.)</li>
</ul>
<p>Fast simple calculations is always not enough for solving problems. A good algorithm design is needed.</p>
<h2 id="Computational-problem-solving"><a href="#Computational-problem-solving" class="headerlink" title="Computational problem solving"></a>Computational problem solving</h2><p>knowledge?</p>
<ul>
<li>Declarative knowledge(陈述性知识）<blockquote>
<p>statements of fact<br>some definition in math e.g. square root.</p>
</blockquote>
</li>
<li>Imperative knowledge(命令性知识）<blockquote>
<p>how to do . a recipe<br>have specific steps</p>
</blockquote>
</li>
</ul>
<h2 id="Capture-a-recipe-how-to-run-program-basic-machine-architecture"><a href="#Capture-a-recipe-how-to-run-program-basic-machine-architecture" class="headerlink" title="Capture a recipe? how to run program(basic machine architecture)"></a>Capture a recipe? how to run program(basic machine architecture)</h2><ul>
<li>program – sequence of instructions<br>(predefined set of primitive instructions)</li>
<li>interpreter – change flow of control</li>
</ul>
<blockquote>
<p><em>Turing complete</em> (图灵完备) we can compute anything using six primitives!</p>
</blockquote>
<h2 id="Programming-language-characteristic"><a href="#Programming-language-characteristic" class="headerlink" title="Programming language characteristic"></a>Programming language characteristic</h2><p>Each programming language</p>
<blockquote>
<p>provides a set of primitive operations.<br>provides mechanisms(机制) for combining primitives to form complex expressions.<br>provides mechanisms for deducing(推断) meanings or values.</p>
</blockquote>
<h3 id="Aspects-of-languages"><a href="#Aspects-of-languages" class="headerlink" title="Aspects of languages"></a>Aspects of languages</h3><ul>
<li><strong>primitives</strong>–numbers,strings,simple operators.etc.</li>
<li><strong>syntax(语法)</strong>–strings of characters and symbols are <strong>well-formed</strong> .</li>
<li><strong>semantics(语义)</strong><blockquote>
<p><em>static semantics</em> – syntactically valid strings have a meaning.<br><em>full semantics</em> – meaning associated with a syntactically correct string of symbols with no static semantic errors(always have exactly one meaning in programming languages, ambiguous may happen in nature languages)</p>
</blockquote>
</li>
</ul>
<h3 id="WRONG"><a href="#WRONG" class="headerlink" title="WRONG"></a>WRONG</h3><ul>
<li><strong>Syntactic errors</strong> - easily cought</li>
<li><strong>Static semantic errors</strong><br>-compiled language chech carefully before running.<br>-interpreted language check while interpreting the program.  </li>
<li><strong>Full semantic errors</strong> - don’t have static semantic error, the meaning is not what we intended.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Fundamentation-of-computer&quot;&gt;&lt;a href=&quot;#Fundamentation-of-computer&quot; class=&quot;headerlink&quot; title=&quot;Fundamentation of computer&quot;&gt;&lt;/a&gt;Fundamen
    
    </summary>
    
      <category term="MIT 6.00 STUDY NOTES" scheme="http://yoursite.com/categories/MIT-6-00-STUDY-NOTES/"/>
    
    
      <category term="study note" scheme="http://yoursite.com/tags/study-note/"/>
    
      <category term="MOOC" scheme="http://yoursite.com/tags/MOOC/"/>
    
  </entry>
  
  <entry>
    <title>随笔NO.1</title>
    <link href="http://yoursite.com/2016/11/11/diary-no-1/"/>
    <id>http://yoursite.com/2016/11/11/diary-no-1/</id>
    <published>2016-11-11T11:11:23.517Z</published>
    <updated>2016-11-11T16:51:24.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lalala终于搭好了自己的blog"><a href="#lalala终于搭好了自己的blog" class="headerlink" title="lalala终于搭好了自己的blog"></a>lalala终于搭好了自己的blog</h1><a id="more"></a>
<p>最近任务好多，自己好乱。</p>
<h3 id="Task-List："><a href="#Task-List：" class="headerlink" title="Task List："></a>Task List：</h3><ul>
<li>优班答辩三页纸</li>
<li><a href="http://10.76.1.181/courses/training/mitF04/calendar.html" target="_blank" rel="external">MIT大作业</a> the last two assignments</li>
<li>outdoorAR medianCut实现</li>
<li>MIT online Course<blockquote>
<p><a href="http://www.xuetangx.com/courses/course-v1:MITx+6_00_1x+sp/info" target="_blank" rel="external">6.00.1X</a> 计算机科学和PYTHON编程导论</p>
<p><a href="http://www.xuetangx.com/courses/MITx/6_00_2x/2014_T2/info" target="_blank" rel="external">6.00.2X</a> 计算思维和数据科学导论</p>
</blockquote>
</li>
<li>Unity 进阶与 shader </li>
<li>英语六级</li>
</ul>
<p>反正有几个早晚要做的快点搞定吧。<br><strong>优班 MIT 项目</strong></p>
<p>不要忘了英语啊！！！<br>Oh my poor English.<br>今天是双11:joy:<br>最后来个校徽：）</p>
<p><img src="http://www.uestc.edu.cn/images/logo.png" alt="UESTC"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;lalala终于搭好了自己的blog&quot;&gt;&lt;a href=&quot;#lalala终于搭好了自己的blog&quot; class=&quot;headerlink&quot; title=&quot;lalala终于搭好了自己的blog&quot;&gt;&lt;/a&gt;lalala终于搭好了自己的blog&lt;/h1&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="心情" scheme="http://yoursite.com/tags/%E5%BF%83%E6%83%85/"/>
    
      <category term="任务" scheme="http://yoursite.com/tags/%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2013/07/13/hello-world/"/>
    <id>http://yoursite.com/2013/07/13/hello-world/</id>
    <published>2013-07-13T12:46:25.000Z</published>
    <updated>2016-11-11T11:35:53.468Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
